1. Creating a file and file write

def newfile = new File("Myfile.txt")
newfile.text = "Pandi"
println newfile.text
newfile.delete()
###############################################################################################
2. Try-Catch-Finally block

def fun(a, b) {
    file = new File("Myfile.txt")
    try {
        if (file.exists()) {
            println "File Exists"
        }
        def result = a / b
        file.text = "Answer: ${result}"
        println "Result written to file."
    } catch (ArithmeticException e) {
        println "Arithmetic Error: " + e.message
    } catch (IOException e) {
        println "IO Error: " + e.message
    } finally {
        println "Process done"
    }
}
fun(10, 0) 
fun(10, 5) 
def tempfile = new File("Myfile.txt")
tempfile.delete()
fun(10,2)  
###############################################################################################
3. methodMissing() method

class Groovy {
    def methodMissing(String name, args) {
        println "Method '$name' is not defined"
    }
}
def obj1 = new Groovy()
obj1.welcome()
###############################################################################################
4. propertyMissing() method

class Groovy {
    String name = "Pandi"
    def propertyMissing(String propName) {
        return "undefined"
    }
}
def obj1 = new Groovy()
println obj1.name      
println obj1.age       
println obj1.city 
###############################################################################################
5.Groovy class that uses metaprogramming to dynamically modify its properties at runtime.

class Groovy {
    String name
    int age
    def print() {
        println "Name: $name"
        println "Age: $age"
    }
}
def obj1 = new Groovy(name: "muni", age: 17)
obj1.print()
obj1.setProperty("name", "Pandi")
obj1.setProperty("age", 23)
println "\nAfter dynamic modification:"
obj1.print()
